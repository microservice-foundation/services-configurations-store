api-gateway.service.name: ${API_GATEWAY_SERVICE_NAME:api-gateway-service}
bootstrap-servers-endpoints: ${KAFKA_BOOTSTRAP_SERVERS_ENDPOINTS:localhost:9092,localhost:9093,localhost:9094}

# kafka configuration
topic:
  name.resource: resources

spring:
  kafka:
    consumer:
      bootstrap-servers: ${bootstrap-servers-endpoints}
      client-id: ${spring.application.name}-consumer
      group-id: ${spring.application.name}-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: "earliest"
      enable-auto-commit: false
      isolation-level: read_committed
      properties:   
        spring.json.trusted.packages: "com.epam.training.microservicefoundation.resourceprocessor.model"        
        spring.json.value.default.type: com.epam.training.microservicefoundation.resourceprocessor.model.ResourceRecord
      retry:
        backoff:
          interval: 1000
          multiplier: 2
          max-retries: 3
    properties.spring.json.trusted.packages: "com.epam.training.microservicefoundation.resourceprocessor.model" 

# client configuration
api-gateway.endpoint: lb://${api-gateway.service.name}
web-client:
  connection:
    timeout: 5000
  response:
    timeout: 5000
  read:
    timeout: 5000
  write:
    timeout: 5000

# retry configuration
retry:
  backoff:
    interval: 1000
    multiplier: 2
    max-retries: 3

# application configuration
logging.level.root: DEBUG


